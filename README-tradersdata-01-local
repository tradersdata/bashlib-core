
   README-tradersdata-local

   Information regarding local idiosyncrasies, conventions, coding style,
   etc. which apply generally to TradersData code.

   There may be some quirks to incorporating this work elsewhere.
   Please be mindful that these are parts of a total body of work going
   back some 15 years, that they were all used in the enterprise, but
   privately, so there are pieces intertwined in ways that will be
   difficult to separate.

   ---------------------------------------------------------------------
   N.B. The hurdles should be minor, but the code is made available with
   the expectation that anyone interested is also capable of their own
   needed modifications. It should not be considered "copy-and-paste"
   ready. (No cargo cultism!)

   While I'll make a fair effort to answer reasonable questions, nothing
   is supported -- unless, of course, it comes with a job or a contract.
   ---------------------------------------------------------------------


   Examples
   --------
   I have a homegrown version system that embeds a cvs-like record in
   many files. Records are in comment form, so do not affect execution
   and can be ignored as superfluous for anyone else's purposes. However,
   any functionality that uses the external data associated with the
   record (e.g. a --version option to a script) would need removal, or
   replacement with a  no-op, or some other suitable alternative. 

   Another example is the use of sha1 digests over md5 sums in numerous
   administrative utilities, all of which depend on other homegrown work.
   This "preference" is tied to tripwire configuration choices made more
   than a decade ago, and reinforced when my own suite of file system
   integrity tools was written to loosely integrate with the tripwire
   databases. The use of sha1 then propagated through scripts written
   subsequently, related or not. Tripwire is no longer used here, but
   there's never been a compelling reason to rip the sha1 code from
   everything else. If I had it to do over, different choices might be
   made, but today they're already baked in the cake.

   If/when any such pieces are published, the dependencies will go out
   first; but this illustrates how a deep body of work, seamless to me,
   presents some challenges to publishing.
 

   Coding Style
   ------------
   "Allman" or "BSD" style curly braces are used -- the opening brace on
   its own line with both braces at the same indentation level.

   I almost always indent with space characters not tabs, usually 3
   spaces, but sometimes 4 with comments offset at 2.

   I am not fond of long wrapped lines and use temporary variables only
   for the purpose of avoiding same, or line continuation used when it
   doesn't look more confusing (and probably sometimes even when it does).

   Most work is copiously commented, variable names are clueful, and
   whitespace is used generously for readability. (I'm all for efficiency
   as a virtue unto itself, generally, over profligate use of resources
   just because they're available. But none of us operate with 64k RAM and
   10MB hard drives any more. Readability contributes to maintainability
   and is a reasonable use of a few extra bytes of storage.)

   Not everyone approves these choices, and some would run afoul of
   conventions if code published here was contributed to other projects.
   But it's not, so it doesn't.

# $Id: v 0.00.01   2011/12/11 07:03:06  deh, cetus $
